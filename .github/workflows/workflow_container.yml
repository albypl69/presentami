name: wasabi container
on:
  workflow_dispatch:
  schedule:
    - cron: "0 9,11 * * *" #Runs on the 9, and 11th hour UTC everyday

env:
  CONTAINER_IMAGE: "ghcr.io/malesci/wasabi:latest"

jobs:

  # define matrix for all executions
  # ------------------------
  DefineMatrix:
    runs-on: ubuntu-latest
    outputs:
      accounts: ${{ steps.get-accounts.outputs.IDs }}
    steps:
      - name: Checkout repo content
        uses: actions/checkout@v3 # checkout the repository content to github runner.
      - name: Get Accounts
        id: get-accounts
        run: |
          echo $(echo ${{ secrets.MATRIX }} | base64 --decode) > originalData.json
          echo 'IDs<<EOF' >> $GITHUB_OUTPUT
          jq "[.[] | { the_id: .id }]" originalData.json >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

          rm -f originalData.json
  # ------------------------

  # deploy a container for the job
  wasabi:
    name: Run container
    runs-on: ubuntu-latest
    continue-on-error: true
    needs:
      - DefineMatrix
    strategy:
      matrix:
        account: ${{ fromJSON(needs.DefineMatrix.outputs.accounts) }}
    steps:
    - name: Set Secrets
      id: sets-secrets
      run: |
        echo ${{ matrix.account.the_id }}
        echo $(echo ${{ secrets.MATRIX }} | base64 --decode) > originalData.json
        the_user=$(jq '.[] | select(.id=="${{ matrix.account.the_id }}") | .user' originalData.json)
        the_pass=$(jq '.[] | select(.id=="${{ matrix.account.the_id }}") | .pass' originalData.json)
        echo "::add-mask::$the_user"
        echo "::add-mask::$the_pass"
        echo "secret-user=$the_user" >> $GITHUB_OUTPUT
        echo "secret-pass=$the_pass" >> $GITHUB_OUTPUT
        rm -f originalData.json
        unset the_user
        unset the_pass

    - name: Run the Docker container
      run: |
        docker run \
          -e GOOGLE_SHEETS_CREDENTIALS_B64=${{ secrets.GOOGLE_SHEETS_CREDENTIALS_B64 }} \
          -e GOOGLE_SHEETS_TOKEN_B64=${{ secrets.GOOGLE_SHEETS_TOKEN_B64 }} \
          -e GOOGLE_SHEETS_SHEET_ID=${{ secrets.GOOGLE_SHEETS_SHEET_ID }} \
          -e GOOGLE_SHEETS_TAB_NAME=${{ secrets.GOOGLE_SHEETS_TAB_NAME }} \
          -e TELEGRAM_API_TOKEN=${{ secrets.TELEGRAM_API_TOKEN }} \
          -e TELEGRAM_USERID=${{ secrets.TELEGRAM_USERID }} \
          -e USER=${{ steps.sets-secrets.outputs.secret-user }} \
          -e PASS=${{ steps.sets-secrets.outputs.secret-pass }} \
        ${{ env.CONTAINER_IMAGE }}
